# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JnU5luVD27dy81HO6SV89gJnwo5TqoOx
"""

from secrets import token_urlsafe

# Dictionary to store short -> long URL mappings
url_map = {}

def shorten_url(long_url):
  """
  Generates a short URL for the provided long URL and stores the mapping.

  Args:
      long_url: The long URL to be shortened.

  Returns:
      The shortened URL.
  """
  # Generate a unique short code
  short_code = token_urlsafe(6)

  # Check for conflicts (highly unlikely with 6 char code)
  while short_code in url_map:
    short_code = token_urlsafe(6)

  # Store the mapping
  url_map[short_code] = long_url

  return f"http://your-domain.com/{short_code}"  # Replace with your domain

def get_long_url(short_code):
  """
  Retrieves the long URL for a given shortened code.

  Args:
      short_code: The shortened code to get the long URL for.

  Returns:
      The long URL or None if not found.
  """
  return url_map.get(short_code)

# Example usage
long_url = "https://www.example.com/very/long/and/unwieldy/url"
short_url = shorten_url(long_url)
print(f"Shortened URL: {short_url}")

# Accessing the original URL
original_url = get_long_url(short_url.split("/")[-1])
print(f"Original URL: {original_url}")